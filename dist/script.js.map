{"version":3,"sources":["script.js"],"names":["clearBtn","document","getElementById","amountInput","termInput","rateInput","form","submitBtn","errorDiv","querySelectorAll","errorIcon","errorMessage","empty","querySelector","complete","repayment","interest","payments","totalAmount","comma","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","submit","showError","num","style","backgroundColor","color","border","display","hideError","validateInput","input","test","validateType","_document$querySelect","type","value","repaymentCalculator","amount","term","rate","monthlyRate","n","monthlyPayment","Math","pow","total","totalInterest","textContent","concat","format","addEventListener","reset","i","type1","console","log","includes","valueAsNumber"],"mappings":"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","file":"script.js","sourcesContent":["// INFORMATIONS START!\r\n// Clear button.\r\nconst clearBtn = document.getElementById(\"clearBtn\");\r\n// Mortgage amount.\r\nconst amountInput = document.getElementById(\"amountValue\");\r\n// Mortgage term.\r\nconst  termInput = document.getElementById(\"termValue\");\r\n// Mortgage rate.\r\nconst rateInput = document.getElementById(\"rateValue\");\r\n// Mortgage type.\r\nconst form = document.getElementById(\"typeForm\");\r\n// Calculate Repayments button.\r\nconst submitBtn = document.getElementById(\"calculateBtn\");\r\n// INFORMATIONS END!\r\n\r\n\r\n// ERRORS START!\r\n// Div for the error.\r\nconst errorDiv = document.querySelectorAll(\".mortgage__div\")\r\n// Input icons for the error.\r\nconst errorIcon = document.querySelectorAll(\".mortgage__icon\");\r\n// Error messages.\r\nconst errorMessage = document.querySelectorAll(\".mortgage__error\");\r\n// ERRORS END!\r\n\r\n\r\n// RESULT START!\r\n// Empty template.\r\nconst empty = document.querySelector(\".empty\");\r\n// Complete template.\r\nconst complete = document.querySelector(\".complete\");\r\n// Repayment template.\r\nconst repayment = document.getElementById(\"repayment\");\r\n// Interest template.\r\nconst interest = document.getElementById(\"interest\");\r\n// Result mortgage amount.\r\nconst payments = document.querySelector(\".complete__amount\");\r\n// Totat Mortgage Amount.\r\nconst totalAmount = document.querySelector(\".complete__totalAmount\");\r\n// RESULT END!\r\nconst comma = new Intl.NumberFormat('en-GB', {\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\n// Variable to check if we can submit\r\nconst submit = [false, false, false, false];\r\n// Functions to show and hide errors.\r\nfunction showError (num) {\r\n    if (num === 3){\r\n        errorMessage[num].style.display = \"block\";\r\n    }\r\n    else{\r\n        errorIcon[num].style.backgroundColor = \"var(--red)\";\r\n        errorIcon[num].style.color = \"var(--white)\";\r\n        errorDiv[num].style.border = \"2px solid var(--red)\";\r\n        errorMessage[num].style.display =\"block\";\r\n    }\r\n}\r\n\r\nfunction hideError (num) {\r\n    if(num === 3){\r\n     errorMessage[num].style.display = \"none\";\r\n    }\r\n    else{\r\n        errorIcon[num].style.backgroundColor = \"var(--background)\";\r\n        errorIcon[num].style.color = \"var(--text-label)\";\r\n        errorDiv[num].style.border = \"1px solid var(--clearBtn)\";\r\n        errorMessage[num].style.display =\"none\";\r\n    }\r\n}\r\n\r\n// Event Listener for the clear button.\r\nclearBtn.addEventListener(\"click\",() => {\r\n    amountInput.value = \"\";\r\n    termInput.value = \"\";\r\n    rateInput.value = \"\";\r\n    form.reset();\r\n    empty.style.display = \"flex\";\r\n        complete.style.display = \"none\";\r\n    for (let i = 0; i <= 3; i++){\r\n        hideError(i);\r\n    } \r\n\r\n})\r\n\r\n// Fuction to validate inputs.\r\nfunction validateInput (input, num){\r\n   let inputRegex = /^(?!0*(\\.0+)?$)\\d+(\\.\\d+)?$/;\r\n    if(!inputRegex.test(input) || !input){\r\n        showError(num);\r\n        submit[num] = false;\r\n    }else{\r\n        hideError(num);\r\n        submit[num] = true;\r\n    }\r\n}\r\nfunction validateType(){\r\n    let type = document.querySelector(\"input[name=type]:checked\")?.value;\r\n    if(type === \"1\" || type === \"2\"){\r\n        hideError(3);\r\n        submit[3] = true;\r\n        return type;\r\n    }else{\r\n        showError(3);\r\n        submit[3] = false; \r\n        return null;\r\n    }\r\n}\r\n// Event Listener for real time check.\r\namountInput.addEventListener('input', () => {\r\n    validateInput(amountInput.value, 0);\r\n})\r\ntermInput.addEventListener('input', () => {\r\n    validateInput(termInput.value, 1);\r\n})\r\nrateInput.addEventListener('input', () => {\r\n    validateInput(rateInput.value, 2);\r\n})\r\nform.addEventListener('change', () => {\r\n    validateType();\r\n})\r\n\r\n// Functions to calculate the repayment and  interest\r\nfunction repaymentCalculator(amount, term, rate) {\r\n  const monthlyRate = (rate / 12) / 100;\r\n  const n = term * 12;\r\n\r\n  const monthlyPayment =\r\n    amount * (monthlyRate * Math.pow(1 + monthlyRate, n)) /\r\n    (Math.pow(1 + monthlyRate, n) - 1);\r\n\r\n  const total = monthlyPayment * n;\r\n  const totalInterest = total - amount;\r\n\r\n  // Format and insert the values with £ and commas\r\n  payments.textContent = `£${comma.format(monthlyPayment)}`;\r\n  totalAmount.textContent = `£${comma.format(total)}`;\r\n  interest.textContent = `£${comma.format(totalInterest)}`;\r\n}\r\n\r\n\r\n\r\n\r\n//Event Listener for the submit button.\r\nsubmitBtn.addEventListener('click', () => {\r\n    validateInput(amountInput.value,0);\r\n    validateInput(termInput.value, 1);\r\n    validateInput(rateInput.value, 2);\r\n    let type1 = validateType();\r\n    console.log(type1)\r\n    if(!submit.includes(false)){\r\n        empty.style.display = \"none\";\r\n        complete.style.display = \"flex\";\r\n        repaymentCalculator(amountInput.valueAsNumber, termInput.valueAsNumber, rateInput.valueAsNumber);\r\n        if(type1 === \"1\"){\r\n            repayment.style.display = 'block';\r\n            interest.style.display = 'none';\r\n        }\r\n        else if(type1 === \"2\"){\r\n            repayment.style.display = \"none\";\r\n            interest.style.display = 'block';\r\n        }\r\n    }\r\n\r\n})"]}